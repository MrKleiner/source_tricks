{"atitle":"Parallax Corrected CubemapsAnd how to use them.","boxes":[{"text":"Parallax Corrected Cubemaps ( PCC )<br>are a special Cubemap Variant.<br>Just like normal Cubemaps, PCC's are used for environmental reflections.<br>Unlike normal ones however, PCC are spatially corrected.<br><br>This means that this type of Cubemap will be aligned with the corners of the room or otherwise specified boundaries.<br>It doesn't take a genius to understand why this is really cool.<br>Normally, for reflections that properly line up with a rooms walls, you would need to use expensive effects.<br>Such as Planar Reflections ( like those found in the Water Shader or the LightmappedReflective Shader ).<br>Or SSR for those privileged.<br><br>The alignment is amazing although it does lack to reflect the movement of dynamic objects ( such as players, vehicles, enemies )<br><br>Here is a graphical example taken from the hit game Hunt Down The Freeman.<br><strike>Yes, these are Textures from Textures.com how did you know</strike><br>","contents":[{"imguseurl":"1","imgsize":"","imgurl":"https://i.imgur.com/cmcyuX6.jpeg"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""},{"text":"So how does one even use them?<br><br>Having PCC requires modifications to the Shaders. Specifically this means new Shaderfiles and a new Game_Shader_dx9.dll<br>In other words...<b> *COUGH COUGH*<br><br></b><b><i><font color=\"#f2b9ff\">IF YOU ARE ON :<br>CSGO, GMOD ( non 32bit ), PORTAL2, L4D2, BLACK MESA, DOD:S, TF2, INSURGENCY, POSTAL III<br>OR ANY OTHER GAME THAT ISN'T LISTED HERE WITHOUT BASIC CODE ACCESS AND DOESN'T HAVE THIS BY DEFAULT</font></i><br></b>( Basically all of them except Hunt Down The Freeman )<br><b><i><font color=\"#f2b9ff\"><u>YOU ARE OUT OF LUCK \"XD\"</u></font></i><br><br>For a list of games where you have enough code access to implement it :<br>HL2, GMOD ( 32-bit ), HL2 Ep1, HL2 Ep2, Alien Swarm, SDK2013mp and SDK2013sp<br>OR ANY OTHER GAME THAT ISN'T LISTED HERE THAT HAS BASIC CODE ACCESS INCLUDING THOSE WITH LEAKED CODE<br><br></b>Now then,<b><br></b>If you are interested in implementing this yourself, use <font color=\"#59ffff\"><a href=\"https://developer.valvesoftware.com/wiki/Parallax_Corrected_Cubemaps#Using_the_new_SDK_LightmappedGeneric_Shader\"><u><i><b>This VDC Article</b></i></u></a></font> or reference <a href=\"https://github.com/mapbase-source/source-sdk-2013\">The Mapbase Code</a><b><br><br></b>Ps :<br>If you use the Mapbase code, for the love of god use a float4x3 not a float4x4 for the ParallaxObb<br>It only sets obbMatrix 1-3 there is no fourth one, and the CubemapPos uses a Float4 despite only using a 3D coordinate<b>.<br></b>You can save an entire constant register and knowing that there is a free value in CubemapPos you might save you another!<b><br></b>","contents":[],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255)","chapter":"Using it"},{"text":"How to use them :<br><br>What do you require? You need a custom Vbsp.exe that has the code for detecting if a Cubemap is supposed to be a PCC.<br>Then your FGD needs a change that adds a new brush entity and an option for the Cubemap to reference it.<br><br>a PCC can only be rectangular.<br>This means that only rooms with 4 sides can properly utilize them.<br>If you are hacky enough, you might find other uses for them.<br><br>The PCC requires the ParallaxOBB Information for which it requires a 3d structure to get it from.<br>In the mapfile, create a Trigger box with the <i>internal</i> size of your room.<br>Like so :<br>","contents":[{"imguseurl":"1","imgsize":"","imgurl":"https://i.imgur.com/I8IQ20h.png"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""},{"text":"Turn this into a brush entity, and assign it \"Parallax_obb\"<br>Depending on the implementation, the brush entity might be called differently! If it's not there at all, it's not implement or the .fgd is missing it!<br><br>Once it's this specific brush entity, give it a name!<br>","contents":[{"imguseurl":"1","imgsize":"500","imgurl":"https://i.imgur.com/oPoELM2.png"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""},{"text":"Create a Cubemap preferably somewhere in the middle of the room. Assign the Parallax_Obb entity you just created to it.<br>Depending on the implementation, the property might be called differently!<br>If it's not there at all, it's not implement or the .fgd is missing it!","contents":[{"imguseurl":"1","imgsize":"500","imgurl":"https://i.imgur.com/8A8fuKo.png"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""},{"text":"Compile the map. If you use the Slammin Vbsp with -nodefaultcubemap or a fixed up vbsp you should see a missing texture for the reflections. Even that one should be parallax corrected like this :<br>","contents":[{"imguseurl":"1","imgsize":"700","imgurl":"https://i.imgur.com/ATOLMOg.jpeg"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""},{"text":"Just built the Cubemaps the usual way and you should have the sweet sweet Graphix nectar!<br>Note that the examples from this Article are done in Hunt Down the Freeman, on it's PBR Shader.<br>Also, if you are building Cubemaps or before and the Cubemaps are not parallax corrected. Make sure the Material of the model uses the custom Shader, it won't work on default Shaders unless they have implemented it!<br>","contents":[{"imguseurl":"1","imgsize":"","imgurl":"https://i.imgur.com/mFPYpCd.jpeg"}],"border_w":"5px 0px 0px","border_c":"rgb(100, 218, 255) rgb(240, 240, 240) rgb(240, 240, 240)","chapter":""}],"selfid":"7b973b27e2f84fc031186094503778fa"}